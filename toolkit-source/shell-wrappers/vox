#!/bin/bash
#########################################################################
# 						VOX
# Programmed by: Tim Racinsky        Date: July, 1993
# Copyright (c) 1993 David Huron
#
# Modifications:
#   Date:      Programmer:       Description:
# June 7/94	Tim Racinsky	Modified to use getopts
#
#
#	This shell program receives input from the command line and after 
# checking it, passes it to the program vox.awk.
#
FILENAME=""
HELP=""
FLAG=""
STNDING=""
USAGE1="USAGE: vox -h                 (Help Screen)"
USAGE2="       vox [file ...]"

if [ -z "$AWK_VER" ]
then
   if [ -f "/usr/bin/awk" ]
   then
      AWK_VER="/usr/bin/awk"
   elif [ -f "/usr/bin/gawk" ]
   then
      AWK_VER="/usr/bin/gawk"
   elif [ -f "/bin/awk" ]
   then
      AWK_VER="/bin/awk"
   elif [ -f "/bin/gawk" ]
   then
      AWK_VER="/bin/gawk"
   elif [ -f "/usr/sbin/awk" ]
   then
      AWK_VER="/usr/sbin/awk"
   elif [ -f "/usr/sbin/gawk" ]
   then
      AWK_VER="/usr/sbin/gawk"
   elif [ -f "/sbin/awk" ]
   then
      AWK_VER="/sbin/awk"
   elif [ -f "/sbin/gawk" ]
   then
      AWK_VER="/sbin/gawk"
   fi
fi
#
while getopts h arg
do
	case "$arg" in
	h) 	HELP="ON";;
     [?]) echo "" 1>&2
		echo "$USAGE1" 1>&2
		echo "$USAGE2" 1>&2
		exit ;;
	esac
done
shift `expr $OPTIND - 1`
# If the help variable has been specified, print the help screen
if [ -n "$HELP" ]
then
	if [ -f ${HUMDRUM}/bin/helpscrn/vox.hlp ]
	then
		cat ${HUMDRUM}/bin/helpscrn/vox.hlp
	else
		echo "No help available on this command."
	fi
	exit
fi
# Process any remaining filenames
while [ "$#" -ne 0 ]
do
	# A '-' specifies standard input
	if [ x"$1" = x- ]
	then
		# Only one '-' is allowed
		if [ -z "$STNDIN" ]
		then
			FILENAME="$FILENAME $1"
			STNDIN="ON"
			shift
		else
			shift
		fi
	elif [ -f "$1" ]
	then
		FILENAME="$FILENAME $1"
		shift
	else
		echo "vox: ERROR: File not found: $1" 1>&2
		FLAG="ON"
		shift
	fi
done	
# If only invalid files specified, exit
if [ -z "$FILENAME" -a -n "$FLAG" ]
then
	exit
fi	
$AWK_VER -f ${HUMDRUM}/bin/vox.awk "DUMMY" $FILENAME
